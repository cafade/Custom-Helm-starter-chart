# Default values for <CHARTNAME>.
# This is a YAML-formatted file.
# Declare variables to be passed into the templates.

replicaCount: 2

image:
  repository: ""
  pullPolicy: IfNotPresent # Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
  # - name: registry-secret-<CHARTNAME>
nameOverride: ""
fullnameOverride: ""

topologySpreadConstraints:
  # - labelSelector:
  #     matchLabels:
  #       app.kubernetes.io/name: <CHARTNAME>
  #   maxSkew: 1
  #   topologyKey: zone
  #   whenUnsatisfiable: DoNotSchedule
  # - labelSelector:
  #     matchLabels:
  #       app.kubernetes.io/name: <CHARTNAME>
  #   maxSkew: 1
  #   topologyKey: kubernetes.io/arch
  #   whenUnsatisfiable: DoNotSchedule
  # - labelSelector:
  #     matchLabels:
  #       app.kubernetes.io/name: <CHARTNAME>
  #   maxSkew: 1
  #   topologyKey: node
  #   whenUnsatisfiable: DoNotSchedule
  - labelSelector:
      matchLabels:
        app.kubernetes.io/name: <CHARTNAME>
    maxSkew: 1
    topologyKey: kubernetes.io/hostname
    whenUnsatisfiable: DoNotSchedule

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  #   - CAP_NET_RAW
  # # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  # allowPrivilegeEscalation: false
  # seccompProfile:
  #   type: RuntimeDefault

# container: []
container:
  ports:
    - name: http
      containerPort: 8080
      protocol: TCP

# service: []
service:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: "nginx"
    # kubernetes.io/tls-acme: "true"
    ## OR
    # kubernetes.io/ingress.class: "traefik"
    # cert-manager.io/cluster-issuer: letsencrypt-prod-<CHARTNAME>
    # ingress.kubernetes.io/ssl-redirect: "true"
  hosts:
    - host: example.com
      paths:
        - path: /
          pathType: Prefix
    - host: www.example.com
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: letsencrypt-prod-<CHARTNAME>
  #    hosts:
  #      - example.com

# To be used in conjunction with cert-manager
traefikIngresRoute:
  enabled: false
  ClusterIssuerName: ""
  sslRedirect: "true"
  entryPoints:
    - web
    - websecure
  routes:
    - host: example.com
      path: /
    - host: www.example.com
      path: /

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# persistence:
#   enabled: true
#   name: <CHARTNAME>-pv-claim
#   accessMode: ReadWriteMany
#   size: 1Gi
#   # storageClass: ""
#   annotations: {}
#   labels:
#     storage.k8s.io/name: nfs

persistence:
  enabled: false
  name: ""
  accessMode: ReadWriteOnce
  size: 128Mi
  # storageClass: ""
  annotations: {}
  labels: {}

volumeMounts: []
  # - name: persistent-storage
  #   mountPath: /etc/certs/
  #   # subPath: persistent/certs

volumes: []
  # - name: persistent-storage
  #   persistentVolumeClaim:
  #     claimName: <CHARTNAME>-pv-claim

# For autoscaling to work the Pods need to have defined the limit of  memory and CPU resources
autoscaling:
  # If 'enabled' is set to true, 'replicaCount' will be skipped
  enabled: false
  minReplicas: 2
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
  # # Uncomment 'podAntiAffinity' Do not run more than one replica inside each node
  # podAntiAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     - labelSelector:
  #         matchLabels:
  #           app.kubernetes.io/name: <CHARTNAME>
  #       topologyKey: kubernetes.io/hostname
  # nodeAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     nodeSelectorTerms:
  #     - matchExpressions:
  #       - key: agentpool
  #         operator: NotIn
  #         values:
  #         - systempool
